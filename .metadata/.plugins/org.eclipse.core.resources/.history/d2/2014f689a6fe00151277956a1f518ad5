package game;

import java.util.LinkedList;

import javax.swing.JOptionPane;

public class GameController {
	
	private String invalidGuess;
	
	public GameController(){
		invalidGuess = "";
	}
	
	public int getGuesses(int totalGuess, int numTricks, int roundNum, LinkedList<Player> players){
		
		//get players' guesses
		for(int i = 0; i < players.size(); i++){
			int guess;
			String input;
			boolean isValid;
			
			//get user's guess --- need to validate input
			if(players.get(i).isHuman()){
				input = JOptionPane.showInputDialog(null, "Enter your guess for round " 
						+ roundNum, "Player Guess", JOptionPane.QUESTION_MESSAGE);
				if(input != null){
					guess = Integer.parseInt(input);
				} else {
					guess = -1;
				}
				
				while(!isValidGuess(guess, totalGuess, numTricks, players.get(i))){
					JOptionPane.showMessageDialog(null, "Invalid Guess - " + invalidGuess);
					guess = Integer.parseInt(JOptionPane.showInputDialog(null, "Enter your guess for round " 
							+ roundNum, "Player Guess", JOptionPane.QUESTION_MESSAGE));
				}
				
				players.get(i).setGuess(guess);
				totalGuess += guess;
				
			} else{
				//get computer's guess
				guess = (int) (Math.random() * (numTricks + 1));		//needs re-checking
				
				while(!isValidGuess(guess, totalGuess, numTricks, players.get(i))){
					guess = (int) (Math.random() * (numTricks + 1));
				}
				
				players.get(i).setGuess(guess);
				totalGuess += guess;
			}
			
		}
		
		return totalGuess;
	}
	
	private boolean isValidGuess(int guess, int totalGuess, int numTricks, Player player){
		
		if(guess == -1){
			invalidGuess = "You did not enter your guess";
			return false;
		}
		
		if(guess > totalGuess){
			invalidGuess = "Guess is larger than the number of tricks";
			return false;
		}
		
		if(player.isDealer()){
			if(guess + totalGuess == numTricks){
				invalidGuess = "The total guess cannot be equal to the number of tricks";
				return false;
			}
		}
		
		return true;
	}
	
	private boolean isValidInput(){
		
	}
	
	public void findTrickWinner(){
		
	}
	
	public void addPoints(){
		
	}

}
