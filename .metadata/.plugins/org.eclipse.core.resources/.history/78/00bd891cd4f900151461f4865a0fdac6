package LinkedList;

public class LinkedList<T> {
	class Node{
		T info;
		Node link;
		
		public Node(T info, Node link){
			this.info = info;
			this.link = link;
		}
	}
		 
	Node head;
	int numItems;
		 
	public LinkedList(){
		head = null;
		numItems = 0;
	}
		 
	 public void add(T data){
		 Node newNode = new Node(data, head);
		 head = newNode;
		 numItems++;
	 }
		 
	 public boolean contains(T data){
		 Node cursor = head;
		 while(cursor != null){
			 if(cursor.info.equals(data)) return true;
			 cursor = cursor.link;
		 }
		  
		 return false;
	 }
		 
	 public void remove(T data){
		 if(head.info.equals(data)){
			 head = head.link;
			 numItems--;
			 return;
		 }
		  
		 Node cursor = head, preCursor = null;
		 boolean found = false;
		  
		  while(cursor != null){
		   if(cursor.info.equals(data)) {
		    found = true;
		    break;
		   }
		   preCursor = cursor;
		   cursor = cursor.link;
		  }
		  
		  if(found){
		   preCursor.link = cursor.link;
		   numItems--;
		   cursor.link = null;
		  }
		 }
		 
		 public int getSize(){
		  return numItems;
		 }
		 
		 public String toString(){
		  String str = "";
		  Node cursor = head;
		  while(cursor != null){
		   str += cursor.info.toString() + "\n";
		   cursor = cursor.link;
		  }
		  return str;
		 }

}
