package game;

import java.util.LinkedList;

import javax.swing.JOptionPane;

import GUI.GameWindow;
import cardDeck.Card;
import cardDeck.CardDeck;

public class Game {
	public static final int NUM_PLAYERS = 5;
	public static final int NUM_ROUNDS = 10;	//round # that has the max number of cards
	
	private CardDeck cardDeck;
	//private int numPlayers;
	//private int numRounds;
	private LinkedList<Player> players;
	private Card trump;
	private int totalGuess;
	private GameWindow gameWindow;
	private int userNum;
	private GameController controller;
	
	public Game(){
		
		totalGuess = 0;
		trump = null;
		userNum = 0;
		controller = new GameController();
		
		enterPlayers();
		
		/*for(int i = 1; i <= NUM_ROUNDS; i++){
			startNewRound(i, i);
		}
		
		for(int i = 1; i < NUM_ROUNDS; i++){
			startNewRound(10 - i, 10 + i);
		}*/
		
		gameWindow = new GameWindow();
		
		startNewRound(5, 5);

	}
	
	private void enterPlayers(){
		players = new LinkedList<Player>();
		String userName = JOptionPane.showInputDialog(null, "Enter your name", 
				"Player Information", JOptionPane.QUESTION_MESSAGE);
		Player user = new Player(userName, true);
		players.add(user);
		for(int i = 1; i < NUM_PLAYERS; i++){
			String computerName = JOptionPane.showInputDialog(null, "Enter your opponent name (Player " + i + ")", 
					"Player Information", JOptionPane.QUESTION_MESSAGE);
			Player computer = new Player(computerName, false);
			players.add(computer);
		}
		userNum = players.size();
	}
	
	private void startNewRound(int numTricks, int roundNum){
		
		//create a card deck and shuffle it
		cardDeck = new CardDeck();
		cardDeck.shuffle(30);
		
		//deal card(s) to each player
		controller.dealCards(numTricks, cardDeck, players);
		
		//display user's hand
		gameWindow.displayUserHand(players.get(userNum - 1));
		
		//determine the trump card
		trump = cardDeck.deal();
		gameWindow.displayTrumpCard(trump);
		
		//get players' guesses
		//totalGuess = controller.getGuesses(totalGuess, numTricks, roundNum, players);
		
		//start laying down cards
		for(int i = 0; i < players.size(); i++){
			
			//users get to choose the card to lay down
			if(players.get(i).isHuman()){
				JOptionPane.showMessageDialog(null, "Pick your card for this trick");
			} else{
				//each computer player lays down one random card
				
			}
			
		}
		
		//userNum++;
		/*if(userNum > players.size()){
			userNum -= players.size();
		}*/
	}

}
